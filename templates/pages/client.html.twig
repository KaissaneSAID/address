

{% block body %}
{% include 'bases/header.html.twig' %}
    <div style="float:right; margin-right:20px;font-size:20px;" class="container-xl col-md-9" style="font-family: 'Roboto', sans-serif;">
        <div class="table-responsive">
            <div class="table-wrapper">
                <div class="table-title" >
                    <div class="row" >
                        <div  class="col-sm-8"><h2 style="font-size:30px; margin-bottom:20px;"><b>Liste des Clients</b></h2></div>
                        <div  class="col-sm-8"><h2 ><button style="font-size:20px" type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal" >Ajout Client</button></h2></div>
                       

                        <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                        <div class="modal-dialog" >
                            <div class="modal-content">
                            <div class="modal-header">
                                <h1 class="modal-title fs-5" id="exampleModalLabel">Ajouter un client</h1>
                            </div>
                                <div class="modal-body">
                                <form action="{{ path('app_create') }}" method="post">
                                        <div class="mb-3">
                                            <label for="NDossier" class="col-form-label">Numero de dossier:</label>
                                            <input type="text" class="form-control"  placeholder="018/11" required name="NDossier" id="NDossier">
                                        </div>
                                        <div class="mb-3">
                                            <label for="Nom" class="col-form-label">Utilisateur:</label>
                                            <input type="text" class="form-control"  placeholder="KATECH" required name="Nom" id="Nom">
                                        </div>
                                        <div class="mb-3">
                                            <label for="Contact" class="col-form-label">Contact (Fixe/mobile):</label>
                                            <input type="text" class="form-control"  placeholder="Moroni Hamdraba" required name="Contact" id="Contact">
                                        </div>
                                        <div class="mb-3">
                                            <label for="Localite" class="col-form-label">Localité</label>
                                            <input type="text" class="form-control"  placeholder="Mdjoiezi" required name="Localite" id="Localite">
                                        </div>
                                        <div class="mb-3">
                                            <label for="adresse" class="col-form-label">IP Adresse</label>
                                            <input type="text" class="form-control"  placeholder="197.255.232.20" required name="Ipaddress" id="adresse">
                                        </div>
                                        <div class="mb-3">
                                            <label for="masque" class="col-form-label">Masque</label>
                                            <input type="text" class="form-control"  placeholder="255.255.255.0" required name="Masque" id="masque">
                                        </div>
                                        <div class="mb-3">
                                            <label for="recipient-name" class="col-form-label">Passerelle</label>
                                            <input type="text" class="form-control" required name="Passerelle" placeholder="197.255.232.1" id="recipient-name">
                                        </div>
                                        <div class="mb-3">
                                            <label for="recipient-name" class="col-form-label">TypeConnexion</label>
                                            <select name="typeConnexionId" class="form-control" aria-label="Default select example">
                                                {% for typeConnexion in typesConnexion %}
                                                <option value="{{ typeConnexion.id }}" >{{ typeConnexion.name }}</option>
                                                {% endfor %}
                                            </select>
                                        </div>

                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fermer</button>
                                        <button type="submit" class="btn btn-primary">Ajouter</button>
                                    </div>
                                </form>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="search-box">
                                <form id="myForm" action="{{ path('app_search') }}" method="post">
                                    <input  id="textInput" value="{{searchQuery}}"  style="font-size:20px; height: 45px; border-radius:5px;" type="text" class="form-control" name="q" value="" placeholder="utilisateur ou par adresse ip">
                                     <button type="submit" id="hiddenSubmitButton" style="display: none;"></button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
                {% if clients is empty %}
        <p style="font-size:44px;text-align:center">Aucun client trouvé pour la recherche <b style="font-size:44px;"> "{{searchQuery}}"</b>.</p>
    {% else %}
                <table class="table table-striped table-hover table-bordered" style="font-size:20px;">
                    <thead>
                        <tr>
                            <th>N°Dossier</th>
                            <th>Utilisateur<i class="fa fa-sort"></i></th>
                            <th>Contact (Fixe/mobile)</th>
                            <th>Localité<i class="fa fa-sort"></i></th>
                            <th>IP Adresse<i class="fa fa-sort"></i></th>
                            <th>Masque<i class="fa fa-sort"></i></th>
                            <th>Passerelle<i class="fa fa-sort"></i></th>
                            <th>Type de Connexion<i class="fa fa-sort"></i></th>
                            <th>Date attribution</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody id="table-body">
                     {% for client in clients %}
                   
                        <tr>
                            <td>{{ client.getNDossier() }}</td>
                            <td>{{ client.getNom() }}</td>
                            <td>{{ client.getContacts() }}</td>
                            <td>{{ client.getLocalite() }}</td>
                            <td>{{ client.getIpaddress() }}</td>
                            <td>{{ client.getMasque() }}</td>
                            <td>{{ client.getPasserelle() }}</td>
                            <td>{{ client.typeConnexion.name}}
                            </td>
                            {% if client.getDate() != "" %}
                                
                            <td>{{ client.getDate() }}</td>
                            {% else %}
                            <td>{{ client.getDateAttribue() | date('d/m/Y') }}</td>

                            {% endif %}
                            
                            <td><a href="{{ path('delete_client', { 'id': client.id }) }}" style="color:red"><i class="bi bi-trash3-fill" onclick="return confirm('Êtes-vous sûr de vouloir supprimer ce client ?')" title="Suprimer"></i></a>
                        </tr>
                        {% endfor %}         
                    </tbody>
                </table>
                
                <div class="clearfix">
                    <div style="font-size:20px;" class="hint-text"></div>
                    <ul style="font-size:24px;" class="pagination" id="pagination">
                          </ul>
                </div>
                {% endif %}
            </div>
        </div>  
    </div> 

{% include 'bases/slidebar.html.twig' %}

<script>

 document.addEventListener("DOMContentLoaded", function () {
    const pagination = document.getElementById('pagination');
    const tableRows = document.querySelectorAll('#table-body tr');
    const hintText = document.querySelector('.hint-text'); // Sélection de l'élément avec la classe hint-text
    
    const rowsPerPage = 7;
    let currentPage = 1;

    function showRows(page) {
        const startIndex = (page - 1) * rowsPerPage;
        const endIndex = startIndex + rowsPerPage;
        tableRows.forEach((row, index) => {
            if (index >= startIndex && index < endIndex) {
                row.style.display = '';
            } else {
                row.style.display = 'none';
            }
        });
    }

    function updatePagination() {
        const totalPages = Math.ceil(tableRows.length / rowsPerPage);
        pagination.innerHTML = '';

        for (let i = 1; i <= totalPages; i++) {
            const li = document.createElement('li');
            li.classList.add('page-item');
            if (i === currentPage) {
                li.classList.add('active');
            }
            const link = document.createElement('a');
            link.href = '#';
            link.classList.add('page-link');
            link.innerText = i;
            link.addEventListener('click', function (event) {
                event.preventDefault();
                currentPage = i;
                showRows(currentPage);
                updatePagination();
                updateHintText(); // Mettre à jour le texte de hint-text à chaque changement de page
            });
            li.appendChild(link);
            pagination.appendChild(li);
        }
    }

    function updateHintText() {
        const startIndex = (currentPage - 1) * rowsPerPage + 1;
        const endIndex = Math.min(currentPage * rowsPerPage, tableRows.length);
        hintText.innerHTML = `affichage de <b>${startIndex}-${endIndex}</b> lignes sur  <b>${tableRows.length}</b> lignes`;
    }

    showRows(currentPage);
    updatePagination();
    updateHintText(); // Appel initial pour mettre à jour le texte hint-text
});

         function submitForm() {
            document.getElementById('myForm').submit();
        }

        // Récupère l'élément input
        const inputField = document.getElementById('textInput');

        // Ajoute un écouteur d'événement sur l'élément input pour détecter les modifications
        inputField.addEventListener('input', function(event) {
            // Vous pouvez ajouter ici des conditions pour vérifier si l'utilisateur a terminé de saisir
            // Par exemple, vous pouvez vérifier la longueur de la chaîne ou s'il y a un caractère spécifique
        });

        // Ajoute un écouteur d'événement sur l'élément input pour détecter la touche "Entrée"
        inputField.addEventListener('keypress', function(event) {
            // Vérifie si la touche pressée est la touche "Entrée" (keyCode 13 ou charCode 13)
            if (event.key === 'Enter' || event.keyCode === 13 || event.charCode === 13) {
                // Empêche le comportement par défaut du formulaire (envoi via le bouton submit)
                event.preventDefault();

                // Appelle la fonction pour soumettre le formulaire
                submitForm();
            }
        });
</script>

{% endblock %}
